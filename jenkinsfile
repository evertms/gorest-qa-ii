pipeline {
    agent any

    tools {
        maven 'Maven' // Nombre del Maven configurado en Jenkins
        jdk 'Java24'   // Nombre del JDK configurado en Jenkins
    }

    stages {

        stage('Checkout') {
            steps {
                echo 'Clonando el repositorio...'
                git branch: 'master', url: 'https://github.com/evertms/gorest-qa-ii.git'
            }
        }

        stage('Build & Test') {
            steps {
                // 1. Envolvemos los comandos 'bat' con el bloque 'withCredentials'
                withCredentials([
                    string(credentialsId: 'GOREST_BASE_URL', variable: 'ENV_BASE_URL'),
                    string(credentialsId: 'GOREST_TOKEN', variable: 'ENV_BEARER_TOKEN')
                ]) {
                    
                    // 2. Usamos un solo bloque 'bat' para todos los comandos de Windows
                    bat """
                        echo "--- Creando archivo .env desde credenciales de Jenkins ---"
                        
                        rem Escribimos las variables de entorno (inyectadas por Jenkins) al archivo
                        echo BASE_URL=%ENV_BASE_URL% > .env
                        echo BEARER_TOKEN=%ENV_BEARER_TOKEN% >> .env
                        
                        echo "--- .env creado. Ejecutando pruebas Karate... ---"
                        
                        rem Tu comando original (ahora encontrará el .env)
                        mvn test
                    """
                }
            }
        }

        stage('Publicar Reporte') {
            steps {
                echo 'Publicando reporte HTML de Karate...'
                publishHTML([
                    allowMissing: false,
                    alwaysLinkToLastBuild: true,
                    keepAll: true,
                    reportDir: 'target/karate-reports',
                    reportFiles: 'karate-summary.html',
                    reportName: 'Reporte de Pruebas Karate'
                ])
            }
        }
    }

    post {
        always {
            echo 'Pipeline finalizado — limpiando workspace.'
            cleanWs()
        }
        success {
            echo 'Pruebas Karate ejecutadas con éxito.'
        }
        failure {
            echo 'Falló alguna etapa del pipeline.'
        }
    }
}
